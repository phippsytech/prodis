<?php
namespace NDISmate\Models\Client\Plan\Service;

use \RedBeanPHP\R as R;

class GetAvailableSessionDuration
{
    public function __invoke($data)
    {
        return ['http_code' => 400, 'error_message' => 'This code has been deprecated.'];

        // get the budget for the service

        // validate that the client_id and service_id are set
        if (!isset($data['client_id']) || !is_numeric($data['client_id']) || !isset($data['service_id']) || !is_numeric($data['service_id'])) {
            return ['http_code' => 400, 'error_message' => 'client_id and service_id are required'];
        }

        $clientplanservices_bean = R::getRow(
            'SELECT 
                clientplans.service_agreement_signed_date,
                clientplans.service_agreement_end_date,
                clientplanservices.id as id,
                services.code as service_code,
                services.name as services_name,
                services.rate as service_rate,
                services.record_travelled_kilometers as record_travelled_kilometers,
                clientplanservices.budget as budget,
                clientplanservices.plan_manager_id as plan_manager_id,
                clientplanservices.kilometer_budget as kilometer_budget
            FROM clientplanservices 
            JOIN services on (services.id = clientplanservices.service_id) 
            JOIN clientplans on (clientplans.id = clientplanservices.plan_id)
            WHERE clientplans.client_id=:client_id
            AND services.id=:service_id',
            [
                ':client_id' => $data['client_id'],
                ':service_id' => $data['service_id']
            ]
        );

        if (!isset($clientplanservices_bean['service_agreement_signed_date'])) {
            return ['http_code' => 404, 'error_message' => 'Service Agreement Signed Date Not Found'];
        }

        // now get the amount spent on the service
        $timetrackings_bean = R::getRow(
            'SELECT 
                SUM( 
                round(
                ((timetrackings.session_duration) +
                IFNULL((CASE WHEN timetrackings.actual_travel_time > 30 THEN 30 ELSE timetrackings.actual_travel_time END),0))/60 
                ,2)
            ) AS Quantity
            FROM timetrackings 
            WHERE client_id=:client_id
            AND service_id=:service_id
            AND session_date>=:service_agreement_signed_date',
            [
                ':client_id' => $data['client_id'],
                ':service_id' => $data['service_id'],
                ':service_agreement_signed_date' => $clientplanservices_bean['service_agreement_signed_date']
            ]
        );

        $spent = $timetrackings_bean['Quantity'] * $clientplanservices_bean['service_rate'];

        if ($clientplanservices_bean['budget'] > 0) {
            $remaining_budget = $clientplanservices_bean['budget'] - $spent;
        } else {
            $remaining_budget = 0;
        }

        $available_session_duration = round(($remaining_budget / $clientplanservices_bean['service_rate']) * 60);

        return [
            'http_code' => 200, 'result' => [
                'available_session_duration' => $available_session_duration,
                'plan_manager_id' => $clientplanservices_bean['plan_manager_id'],
                'record_travelled_kilometers' => $clientplanservices_bean['record_travelled_kilometers'],
            ]
        ];
    }
}
